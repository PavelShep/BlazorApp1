@page "/villas"
@inject HttpClient Http;
@inject NavigationManager NavigationManager;

<h3>Villas</h3>

@if (villas.Count <= 0)
{
	<span>Loading Villas...</span>
}
else
{
	<button @onclick="AddVilla" class="btn btn-primary">Add new Villa</button>

    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Rate</th>
                <th>Occupancy</th>
                <th>Sqft</th>
                <th>Details</th>
                <th>Image</th>
                <th>Amenity</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var villa in villas)
            {
                <tr>
                    <td>@villa.Name</td>
                    <td>@villa.Rate</td>
                    <td>@villa.Occupancy</td>
                    <td>@villa.Sqft</td>
                    <td>@villa.Details</td>
                    <td><img src="@villa.ImageUrl" alt="@villa.Name" style="width:100px;" /></td>
                    <td>@villa.Amenity</td>
                    <td>
                        <button onclick="@(() => EditVilla(villa.Id))" class="btn btn-secondary">Edit</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

}

@code {

	List<VillaDTO> villas = new List<VillaDTO>();

	protected override async Task OnInitializedAsync()
	{
		var result = await Http.GetFromJsonAsync<List<VillaDTO>>("api/VillaAPI");
		if (result != null)
		{
			villas = result;
		}
	}

	public void AddVilla()
	{
		NavigationManager.NavigateTo("/villa");
	}

	public void EditVilla(int id)
	{
		NavigationManager.NavigateTo($"/villa/{id}");
	}

}
